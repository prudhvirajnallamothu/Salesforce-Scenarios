public class OpportunityTriggerHandler {
    public void fteQuarterUpdates(List<Opportunity> oppList, Map<Id, Opportunity> oldOppMap) {
        for (Opportunity opp : oppList) {
            Opportunity oldOpp = oldOppMap.get(opp.Id);
            if (shouldRecalculateQuarterTargets(opp, oldOpp)) {
                if (opp.Projected_Project_Start_Date__c != null && opp.Projected_Project_End_Date__c != null) {
                    Integer numOfMonths = opp.Projected_Project_Start_Date__c.monthsBetween(opp.Projected_Project_End_Date__c) + 1;
                    if (numOfMonths > 0) {
                        Decimal monthlyAmount = opp.Weighted_Opportunity_Value__c.divide(numOfMonths, 2);
                        recalculateQuarterTargets(opp, monthlyAmount);
                    } else {
                        resetQuarterTargets(opp);
                    }
                } else {
                    resetQuarterTargets(opp);
                }
            }
        }
    }

    private boolean shouldRecalculateQuarterTargets(Opportunity opp, Opportunity oldOpp) {
        return opp.Deal_Structure__c == 'FTE'
                && (opp.Weighted_Opportunity_Value__c != oldOpp.Weighted_Opportunity_Value__c
                || opp.Projected_Project_Start_Date__c != oldOpp.Projected_Project_Start_Date__c
                || opp.Projected_Project_End_Date__c != oldOpp.Projected_Project_End_Date__c
                || opp.Deal_Structure__c != oldOpp.Deal_Structure__c
                || opp.Data_update_discovery__c != oldOpp.Data_update_discovery__c);
    }

    private void resetQuarterTargets(Opportunity opp) {
        opp.Q1_Target__c = null;
        opp.Q2_Target__c = null;
        opp.Q3_Target__c = null;
        opp.Q4_Target__c = null;
    }

    private void recalculateQuarterTargets(Opportunity opp, Decimal monthlyAmount) {
        Map<Integer, Integer> quarterCounts = new Map<Integer, Integer>{1 => 0, 2 => 0, 3 => 0, 4 => 0};
        Date startDate = opp.Projected_Project_Start_Date__c.toStartOfMonth();
        Date endDate = opp.Projected_Project_End_Date__c.toStartOfMonth();
        while (startDate <= endDate) {
            Integer quarter = getQuarterNumber(startDate);
            quarterCounts.put(quarter, quarterCounts.get(quarter) + 1);
            startDate = startDate.addMonths(1);
        }
        opp.Q1_Target__c = quarterCounts.get(1) > 0 ? monthlyAmount * quarterCounts.get(1) : null;
        opp.Q2_Target__c = quarterCounts.get(2) > 0 ? monthlyAmount * quarterCounts.get(2) : null;
        opp.Q3_Target__c = quarterCounts.get(3) > 0 ? monthlyAmount * quarterCounts.get(3) : null;
        opp.Q4_Target__c = quarterCounts.get(4) > 0 ? monthlyAmount * quarterCounts.get(4) : null;
    }

    public static Integer getQuarterNumber(Date d) {
        return Math.ceil(d.month() / 3);
    }
}
